{"_id":"redux-create-types","_rev":"1-40e9e1f256ef665425dbff34a9ea1e2e","name":"redux-create-types","description":"create types with namespacing","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"redux-create-types","version":"0.0.1","description":"create types with namespacing","main":"lib","scripts":{"test":"nyc ava","test:watch":"ava --watch","lint":"eslint src test","cover":"nyc report --reporter=html","coveralls":"nyc report --reporter=text-lcov | coveralls","build":"BABEL_ENV=production babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build"},"repository":{"type":"git","url":"git+https://github.com/BerkeleyTrue/redux-create-types.git"},"keywords":["react","redux","redux-actions","types"],"ava":{"require":["babel-register"],"failFast":true},"author":{"name":"Berkeley Martinez","email":"Berkeley@RoboTie.com","url":"http://RoboTie.com"},"license":"MIT","devDependencies":{"ava":"^0.16.0","babel":"^6.5.2","babel-cli":"^6.14.0","babel-eslint":"^6.1.2","babel-plugin-dev-expression":"^0.2.1","babel-plugin-transform-runtime":"^6.15.0","babel-preset-es2015":"^6.14.0","coveralls":"^2.11.14","eslint":"^3.5.0","eslint-plugin-import":"^1.15.0","nyc":"^8.3.0"},"dependencies":{"babel-runtime":"^6.11.6","invariant":"^2.2.1"},"gitHead":"65a2fd7231607a06c73ae77f472f8b68c09889ff","bugs":{"url":"https://github.com/BerkeleyTrue/redux-create-types/issues"},"homepage":"https://github.com/BerkeleyTrue/redux-create-types#readme","_id":"redux-create-types@0.0.1","_shasum":"320892c1dc173a0162c75ed3a01d2da74f72b5ba","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"berkeleytrue","email":"berkeley@robotie.com"},"maintainers":[{"name":"berkeleytrue","email":"berkeley@robotie.com"}],"dist":{"shasum":"320892c1dc173a0162c75ed3a01d2da74f72b5ba","tarball":"https://registry.npmjs.org/redux-create-types/-/redux-create-types-0.0.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/redux-create-types-0.0.1.tgz_1474516899115_0.6954091642983258"},"directories":{}}},"readme":"# Redux Create Types\n\nA better way to create types.\n\n\n## Install\n\n```bash\nnpm install --save redux-create-types\n```\n\n## Usage\n\n```jsx\nimport { createTypes } from 'redux-create-types';\n\n// we namespace all our types\n// you no longer have to worry about action types clashing\nexport const namespace = 'app';\nexport const types = createTypes(\n  [\n    'openModal',\n    'handleClick',\n    'updateEmailSettings',\n    // this will create types for multiple stages of an async side effect\n    createAsyncTypes('fetch')\n  ],\n  // namespace will prefix all our types!\n  namespace\n);\n// types will look like the following\n// types = {\n//   openModal: 'app.openModal',\n//   handleClick: 'app.handleClick',\n//   updateEmailSettings: 'app.updateEmailSettings'\n//   // our async types\n//   fetch: {\n//     // multple namespaced actions are created by createAsyncTypes\n//     start: 'app.fetch.start',\n//     next: 'app.fetch.next',\n//     error: 'app.fetch.error',\n//     complete: 'app.fetch.compelete',\n//     // this allows you to use just the type without the async stages\n//     toString() { return 'app.fetch'; }\n//    }\n// };\n\nexport const openModal = () => ({ type: types.openModal });\nexport const handleClick = () => ({ type: types.handleClick });\nexport const updateEmailSettings = () => ({ type: types.updateEmailSettings });\nexport const fetch = () => ({ type: types.fetch });\nexport const startFetch = () => ({ type: types.fetch.start });\nexport const fetchCompleted = () => ({ type: types.fetch.complete });\nexport const fetchHasErrored = () => ({ type: types.fetch.error });\nexport const fetchReturnedAValue = () => ({ type: types.fetch.next });\n```\n\n\n## API\n\n\n## config\n\nAn object with defaults for the delimiter as well as the async type value\nchanging the value of these properties will allow you to set the default\nthroughout your project.\n\n```js\nconst config = {\n  delimiter: '.',\n  start: 'start',\n  next: 'next',\n  compelete: 'complete',\n  error: 'error'\n};\n```\n\n## createTypes\n\nA function that takes three inputs and returns an object where the keys\ncorrespond to action types.\n\n* `types`: Required - an array of strings or objects created using the `createAsyncTypes`\n  function\n* `namespace`: Required - A String used to namespace (prefix) types.\n* `delimiter`: A string used between the prefix and the type. Defaults to\n  `config.delimiter`\n\n```js\ncreateTypes(\n  types: [...String|AsyncTypesObject],\n  namespace: String,\n  delimiter?: String = config.delimiter\n) => ({\n  [type]: namespace + delimiter + type,\n  [type]: AsyncTypesObject\n})\n```\n\n## createAsyncTypes\n\nA function that takes a type and returns an object with postfix stages.\n\n* `type`: Required - A string representing an async side-effect\n* `delimiter`: A string used to join the async type to the different stages\n\nThe type is postfixed by the following stages\n\n* start\n* next\n* complete\n* error\n\nThese four postfixed types should cover most async methods in JavaScript\nincluding Promises, callbacks, and Observables;\n\nThe value postfixed to your type can be changed globally by changing the associated values on the\n`config` object described above.\n\n```js\ncreateAsyncTypes(\n  type: String,\n  delimiter?: String = config.delimiter\n) => ({\n  start: String,\n  next: String,\n  complete: String,\n  error: String,\n  toString: () => type\n});\n```\n","maintainers":[{"name":"berkeleytrue","email":"berkeley@r3dm.com"}],"time":{"modified":"2016-09-22T04:01:39.341Z","created":"2016-09-22T04:01:39.341Z","0.0.1":"2016-09-22T04:01:39.341Z"},"homepage":"https://github.com/BerkeleyTrue/redux-create-types#readme","keywords":["react","redux","redux-actions","types"],"repository":{"type":"git","url":"git+https://github.com/BerkeleyTrue/redux-create-types.git"},"author":{"name":"Berkeley Martinez","email":"Berkeley@RoboTie.com","url":"http://RoboTie.com"},"bugs":{"url":"https://github.com/BerkeleyTrue/redux-create-types/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"57e357a3-1819\"","_lastModified":"Thu, 22 Sep 2016 04:01:39 GMT"}